Chapter III
Project instructions

	• Name your executable files client and server.

	• You have to turn in a Makefile which will compile your source files. It must not
	relink.

	• You can definitely use your libft.

	• You have to handle errors thoroughly. In no way your program should quit unexpectedly (segmentation fault, bus error, double free, and so forth).

	• Your program mustn’t have memory leaks.

	• You can have one global variable per program (one for the client and one for
	the server), but you will have to justify their use.

	• In order to complete the mandatory part, you are allowed to use the following
	functions:
		◦ write
		◦ ft_printf and any equivalent YOU coded
		◦ signal
		◦ sigemptyset
		◦ sigaddset
		◦ sigaction
		◦ kill
		◦ getpid
		◦ malloc
		◦ free
		◦ pause
		◦ sleep
		◦ usleep
		◦ exit
$(addprefix $(PATH_SRC), )
$(addprefix $(PATH_OBJ), $(COBJS))

Chapter IV
Mandatory Part
You must create a communication program in the form of a client and a server.
	
	• The server must be started first. After its launch, it has to print its PID.

	• The client takes two parameters:
		◦ The server PID.
		◦ The string to send.

	• The client must send the string passed as a parameter to the server.
	Once the string has been received, the server must print it.

	• The server has to display the string pretty quickly. Quickly means that if you think
	it takes too long, then it is probably too long.
	1 second for displaying 100 characters is way too much!

	• Your server should be able to receive strings from several clients in a row without
	needing to restart.

	• The communication between your client and your server has to be done only using
	UNIX signals.

	• You can only use these two signals: SIGUSR1 and SIGUSR2.
	Linux system does NOT queue signals when you already have pending


signals of this type! Bonus time?
Chapter V
Bonus part
Bonus list:

	• The server acknowledges every message received by sending back a signal to the
	client.

	• Unicode characters support!







CLIENT_NAME = client
C_SRC = code_client.c

SERVER_NAME = server
S_SRC = code_server.c

BCLIENT_NAME = client_bonus
BC_SRC = code_client_bonus.c

BSERVER_NAME = server_bonus
BS_SRC = code_server_bonus.c

SRC = utils.c

PATH_SRC = ./SRC/
PATH_OBJ = ./OBJ/

C_OBJS = $(addprefix $(PATH_SRC), $(C_SRC:.c=.o) $(SRC:.c=.o))
S_OBJS = $(addprefix $(PATH_SRC), $(S_SRC:.c=.o) $(SRC:.c=.o))

BC_OBJS = $(addprefix $(PATH_SRC), $(BC_SRC:.c=.o) $(SRC:.c=.o))
BS_OBJS = $(addprefix $(PATH_SRC), $(BS_SRC:.c=.o) $(SRC:.c=.o))

CFLAGS = -Wall -Wextra -Werror

%.o: %.c
	clang $(CFLAGS) $< -g -c -o $(subst /SRC,,$@)
	mv $@ $(PATH_OBJ)

all:$(CLIENT_NAME) $(SERVER_NAME) extra

$(CLIENT_NAME) : $(C_OBJS)
	clang -g $(subst $(PATH_SRC),$(PATH_OBJ),$(C_OBJS)) -o $(CLIENT_NAME)

$(SERVER_NAME) : $(S_OBJS)
	clang -g $(subst $(PATH_SRC),$(PATH_OBJ),$(S_OBJS)) -o $(SERVER_NAME)

bonus: $(BCLIENT_NAME) $(BSERVER_NAME) extra

$(BCLIENT_NAME) : $(BC_OBJS)
	clang -g $(subst $(PATH_SRC),$(PATH_OBJ),$(BC_OBJS)) -o $(BCLIENT_NAME)

$(BSERVER_NAME) : $(BS_OBJS)
	clang -g $(subst $(PATH_SRC),$(PATH_OBJ),$(BS_OBJS)) -o $(BSERVER_NAME)

extra:
	@echo "Done :)"

clean:
	rm -f $(subst $(PATH_SRC),$(PATH_OBJ),$(C_OBJS))
	rm -f $(subst $(PATH_SRC),$(PATH_OBJ),$(S_OBJS))
	rm -f $(subst $(PATH_SRC),$(PATH_OBJ),$(BS_OBJS))
	rm -f $(subst $(PATH_SRC),$(PATH_OBJ),$(BS_OBJS))
	clear
	@echo "cleaned :)"

fclean: clean
	rm -f $(CLIENT_NAME)
	rm -f $(SERVER_NAME)
	rm -f $(BCLIENT_NAME)
	rm -f $(BSERVER_NAME)
	clear
	@echo "fcleaned :)"

re: fclean all

Message received from 92001: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92004: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92033: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92039: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92055: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92062: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92065: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92070: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92092: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92095: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92106: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92119: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92130: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92134: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92140: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92145: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92148: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92164: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92167: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92188: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92194: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92202: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92208: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92211: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92216: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92229: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92232: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92240: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92253: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92264: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92271: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92274: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92279: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92282: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
Message received from 92298: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789